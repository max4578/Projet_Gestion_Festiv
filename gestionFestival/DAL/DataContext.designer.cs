#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gestionFestival.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionFestival")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAdministrateur(Administrateur instance);
    partial void UpdateAdministrateur(Administrateur instance);
    partial void DeleteAdministrateur(Administrateur instance);
    partial void InsertComptable(Comptable instance);
    partial void UpdateComptable(Comptable instance);
    partial void DeleteComptable(Comptable instance);
    partial void InsertDepense(Depense instance);
    partial void UpdateDepense(Depense instance);
    partial void DeleteDepense(Depense instance);
    partial void InsertMateriel(Materiel instance);
    partial void UpdateMateriel(Materiel instance);
    partial void DeleteMateriel(Materiel instance);
    partial void InsertParticipant(Participant instance);
    partial void UpdateParticipant(Participant instance);
    partial void DeleteParticipant(Participant instance);
    partial void InsertPersonnel(Personnel instance);
    partial void UpdatePersonnel(Personnel instance);
    partial void DeletePersonnel(Personnel instance);
    partial void InsertPoste(Poste instance);
    partial void UpdatePoste(Poste instance);
    partial void DeletePoste(Poste instance);
    partial void InsertRecette(Recette instance);
    partial void UpdateRecette(Recette instance);
    partial void DeleteRecette(Recette instance);
    partial void InsertResponsable(Responsable instance);
    partial void UpdateResponsable(Responsable instance);
    partial void DeleteResponsable(Responsable instance);
    partial void InsertRevenu(Revenu instance);
    partial void UpdateRevenu(Revenu instance);
    partial void DeleteRevenu(Revenu instance);
    #endregion
		
		public DataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GestionFestivalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrateur> Administrateur
		{
			get
			{
				return this.GetTable<Administrateur>();
			}
		}
		
		public System.Data.Linq.Table<Comptable> Comptable
		{
			get
			{
				return this.GetTable<Comptable>();
			}
		}
		
		public System.Data.Linq.Table<Depense> Depense
		{
			get
			{
				return this.GetTable<Depense>();
			}
		}
		
		public System.Data.Linq.Table<Materiel> Materiel
		{
			get
			{
				return this.GetTable<Materiel>();
			}
		}
		
		public System.Data.Linq.Table<Participant> Participant
		{
			get
			{
				return this.GetTable<Participant>();
			}
		}
		
		public System.Data.Linq.Table<Personnel> Personnel
		{
			get
			{
				return this.GetTable<Personnel>();
			}
		}
		
		public System.Data.Linq.Table<Poste> Poste
		{
			get
			{
				return this.GetTable<Poste>();
			}
		}
		
		public System.Data.Linq.Table<Recette> Recette
		{
			get
			{
				return this.GetTable<Recette>();
			}
		}
		
		public System.Data.Linq.Table<Responsable> Responsable
		{
			get
			{
				return this.GetTable<Responsable>();
			}
		}
		
		public System.Data.Linq.Table<Revenu> Revenu
		{
			get
			{
				return this.GetTable<Revenu>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjouterPersonnel")]
		public int AjouterPersonnel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateNaiss, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string spec, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nom, prenom, dateNaiss, email, tel, spec, pass);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjouterPoste")]
		public int AjouterPoste([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nomPoste, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nomPoste, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isAdmin")]
		public ISingleResult<isAdminResult> isAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<isAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isCompt")]
		public ISingleResult<isComptResult> isCompt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<isComptResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isParticipant")]
		public ISingleResult<isParticipantResult> isParticipant([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<isParticipantResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isResponsable")]
		public ISingleResult<isResponsableResult> isResponsable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<isResponsableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VérificatioCompteExistant")]
		public ISingleResult<VérificatioCompteExistantResult> VérificatioCompteExistant([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email);
			return ((ISingleResult<VérificatioCompteExistantResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VérificationLogin")]
		public ISingleResult<VérificationLoginResult> VérificationLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, pass);
			return ((ISingleResult<VérificationLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AfficherPoste")]
		public ISingleResult<AfficherPosteResult> AfficherPoste()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AfficherPosteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRespAndPoste")]
		public ISingleResult<GetRespAndPosteResult> GetRespAndPoste([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPers)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPers);
			return ((ISingleResult<GetRespAndPosteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjouterMateriel")]
		public int AjouterMateriel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> prix, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPers, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPoste)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nom, prix, qtt, idPers, idPoste);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllMateriel")]
		public ISingleResult<GetAllMaterielResult> GetAllMateriel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPers)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPers);
			return ((ISingleResult<GetAllMaterielResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMateriel")]
		public int DeleteMateriel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idMat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idMat);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateMateriel")]
		public int UpdateMateriel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> prix, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idMat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nom, prix, qtt, idMat);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrateur")]
	public partial class Administrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPers;
		
		private System.DateTime _dateFest;
		
		private string _nomFest;
		
		private EntityRef<Personnel> _Personnel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    partial void OndateFestChanging(System.DateTime value);
    partial void OndateFestChanged();
    partial void OnnomFestChanging(string value);
    partial void OnnomFestChanged();
    #endregion
		
		public Administrateur()
		{
			this._Personnel = default(EntityRef<Personnel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFest", DbType="DateTime NOT NULL")]
		public System.DateTime dateFest
		{
			get
			{
				return this._dateFest;
			}
			set
			{
				if ((this._dateFest != value))
				{
					this.OndateFestChanging(value);
					this.SendPropertyChanging();
					this._dateFest = value;
					this.SendPropertyChanged("dateFest");
					this.OndateFestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomFest", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomFest
		{
			get
			{
				return this._nomFest;
			}
			set
			{
				if ((this._nomFest != value))
				{
					this.OnnomFestChanging(value);
					this.SendPropertyChanging();
					this._nomFest = value;
					this.SendPropertyChanged("nomFest");
					this.OnnomFestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Administrateur", Storage="_Personnel", ThisKey="idPers", OtherKey="idPers", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Administrateur = null;
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Administrateur = this;
						this._idPers = value.idPers;
					}
					else
					{
						this._idPers = default(int);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comptable")]
	public partial class Comptable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPers;
		
		private decimal _budgetDisp;
		
		private decimal _salaire;
		
		private int _idAdmin;
		
		private EntityRef<Personnel> _Personnel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    partial void OnbudgetDispChanging(decimal value);
    partial void OnbudgetDispChanged();
    partial void OnsalaireChanging(decimal value);
    partial void OnsalaireChanged();
    partial void OnidAdminChanging(int value);
    partial void OnidAdminChanged();
    #endregion
		
		public Comptable()
		{
			this._Personnel = default(EntityRef<Personnel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_budgetDisp", DbType="Money NOT NULL")]
		public decimal budgetDisp
		{
			get
			{
				return this._budgetDisp;
			}
			set
			{
				if ((this._budgetDisp != value))
				{
					this.OnbudgetDispChanging(value);
					this.SendPropertyChanging();
					this._budgetDisp = value;
					this.SendPropertyChanged("budgetDisp");
					this.OnbudgetDispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaire", DbType="Money NOT NULL")]
		public decimal salaire
		{
			get
			{
				return this._salaire;
			}
			set
			{
				if ((this._salaire != value))
				{
					this.OnsalaireChanging(value);
					this.SendPropertyChanging();
					this._salaire = value;
					this.SendPropertyChanged("salaire");
					this.OnsalaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", DbType="Int NOT NULL")]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this.OnidAdminChanging(value);
					this.SendPropertyChanging();
					this._idAdmin = value;
					this.SendPropertyChanged("idAdmin");
					this.OnidAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Comptable", Storage="_Personnel", ThisKey="idPers", OtherKey="idPers", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Comptable = null;
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Comptable = this;
						this._idPers = value.idPers;
					}
					else
					{
						this._idPers = default(int);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Depense")]
	public partial class Depense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDepense;
		
		private int _idPoste;
		
		private decimal _totalDepense;
		
		private EntitySet<Materiel> _Materiel;
		
		private EntitySet<Participant> _Participant;
		
		private EntityRef<Poste> _Poste;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepenseChanging(int value);
    partial void OnidDepenseChanged();
    partial void OnidPosteChanging(int value);
    partial void OnidPosteChanged();
    partial void OntotalDepenseChanging(decimal value);
    partial void OntotalDepenseChanged();
    #endregion
		
		public Depense()
		{
			this._Materiel = new EntitySet<Materiel>(new Action<Materiel>(this.attach_Materiel), new Action<Materiel>(this.detach_Materiel));
			this._Participant = new EntitySet<Participant>(new Action<Participant>(this.attach_Participant), new Action<Participant>(this.detach_Participant));
			this._Poste = default(EntityRef<Poste>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDepense
		{
			get
			{
				return this._idDepense;
			}
			set
			{
				if ((this._idDepense != value))
				{
					this.OnidDepenseChanging(value);
					this.SendPropertyChanging();
					this._idDepense = value;
					this.SendPropertyChanged("idDepense");
					this.OnidDepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", DbType="Int NOT NULL")]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					if (this._Poste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPosteChanging(value);
					this.SendPropertyChanging();
					this._idPoste = value;
					this.SendPropertyChanged("idPoste");
					this.OnidPosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDepense", DbType="Money NOT NULL")]
		public decimal totalDepense
		{
			get
			{
				return this._totalDepense;
			}
			set
			{
				if ((this._totalDepense != value))
				{
					this.OntotalDepenseChanging(value);
					this.SendPropertyChanging();
					this._totalDepense = value;
					this.SendPropertyChanged("totalDepense");
					this.OntotalDepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depense_Materiel", Storage="_Materiel", ThisKey="idDepense", OtherKey="idDepense")]
		public EntitySet<Materiel> Materiel
		{
			get
			{
				return this._Materiel;
			}
			set
			{
				this._Materiel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depense_Participant", Storage="_Participant", ThisKey="idDepense", OtherKey="idDepense")]
		public EntitySet<Participant> Participant
		{
			get
			{
				return this._Participant;
			}
			set
			{
				this._Participant.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Depense", Storage="_Poste", ThisKey="idPoste", OtherKey="idPoste", IsForeignKey=true)]
		public Poste Poste
		{
			get
			{
				return this._Poste.Entity;
			}
			set
			{
				Poste previousValue = this._Poste.Entity;
				if (((previousValue != value) 
							|| (this._Poste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poste.Entity = null;
						previousValue.Depense.Remove(this);
					}
					this._Poste.Entity = value;
					if ((value != null))
					{
						value.Depense.Add(this);
						this._idPoste = value.idPoste;
					}
					else
					{
						this._idPoste = default(int);
					}
					this.SendPropertyChanged("Poste");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materiel(Materiel entity)
		{
			this.SendPropertyChanging();
			entity.Depense = this;
		}
		
		private void detach_Materiel(Materiel entity)
		{
			this.SendPropertyChanging();
			entity.Depense = null;
		}
		
		private void attach_Participant(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Depense = this;
		}
		
		private void detach_Participant(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Depense = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materiel")]
	public partial class Materiel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMateriel;
		
		private string _nom;
		
		private decimal _prix;
		
		private int _quantité;
		
		private int _idDepense;
		
		private int _idPers;
		
		private EntityRef<Depense> _Depense;
		
		private EntityRef<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMaterielChanging(int value);
    partial void OnidMaterielChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprixChanging(decimal value);
    partial void OnprixChanged();
    partial void OnquantitéChanging(int value);
    partial void OnquantitéChanged();
    partial void OnidDepenseChanging(int value);
    partial void OnidDepenseChanged();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    #endregion
		
		public Materiel()
		{
			this._Depense = default(EntityRef<Depense>);
			this._Responsable = default(EntityRef<Responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateriel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMateriel
		{
			get
			{
				return this._idMateriel;
			}
			set
			{
				if ((this._idMateriel != value))
				{
					this.OnidMaterielChanging(value);
					this.SendPropertyChanging();
					this._idMateriel = value;
					this.SendPropertyChanged("idMateriel");
					this.OnidMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Money NOT NULL")]
		public decimal prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantité", DbType="Int NOT NULL")]
		public int quantité
		{
			get
			{
				return this._quantité;
			}
			set
			{
				if ((this._quantité != value))
				{
					this.OnquantitéChanging(value);
					this.SendPropertyChanging();
					this._quantité = value;
					this.SendPropertyChanged("quantité");
					this.OnquantitéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", DbType="Int NOT NULL")]
		public int idDepense
		{
			get
			{
				return this._idDepense;
			}
			set
			{
				if ((this._idDepense != value))
				{
					if (this._Depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepenseChanging(value);
					this.SendPropertyChanging();
					this._idDepense = value;
					this.SendPropertyChanged("idDepense");
					this.OnidDepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					if (this._Responsable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depense_Materiel", Storage="_Depense", ThisKey="idDepense", OtherKey="idDepense", IsForeignKey=true)]
		public Depense Depense
		{
			get
			{
				return this._Depense.Entity;
			}
			set
			{
				Depense previousValue = this._Depense.Entity;
				if (((previousValue != value) 
							|| (this._Depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depense.Entity = null;
						previousValue.Materiel.Remove(this);
					}
					this._Depense.Entity = value;
					if ((value != null))
					{
						value.Materiel.Add(this);
						this._idDepense = value.idDepense;
					}
					else
					{
						this._idDepense = default(int);
					}
					this.SendPropertyChanged("Depense");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Materiel", Storage="_Responsable", ThisKey="idPers", OtherKey="idPers", IsForeignKey=true)]
		public Responsable Responsable
		{
			get
			{
				return this._Responsable.Entity;
			}
			set
			{
				Responsable previousValue = this._Responsable.Entity;
				if (((previousValue != value) 
							|| (this._Responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Responsable.Entity = null;
						previousValue.Materiel.Remove(this);
					}
					this._Responsable.Entity = value;
					if ((value != null))
					{
						value.Materiel.Add(this);
						this._idPers = value.idPers;
					}
					else
					{
						this._idPers = default(int);
					}
					this.SendPropertyChanged("Responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participant")]
	public partial class Participant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPers;
		
		private int _heureTravail;
		
		private decimal _salaire;
		
		private int _idResp;
		
		private int _idDepense;
		
		private EntityRef<Depense> _Depense;
		
		private EntityRef<Personnel> _Personnel;
		
		private EntityRef<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    partial void OnheureTravailChanging(int value);
    partial void OnheureTravailChanged();
    partial void OnsalaireChanging(decimal value);
    partial void OnsalaireChanged();
    partial void OnidRespChanging(int value);
    partial void OnidRespChanged();
    partial void OnidDepenseChanging(int value);
    partial void OnidDepenseChanged();
    #endregion
		
		public Participant()
		{
			this._Depense = default(EntityRef<Depense>);
			this._Personnel = default(EntityRef<Personnel>);
			this._Responsable = default(EntityRef<Responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heureTravail", DbType="Int NOT NULL")]
		public int heureTravail
		{
			get
			{
				return this._heureTravail;
			}
			set
			{
				if ((this._heureTravail != value))
				{
					this.OnheureTravailChanging(value);
					this.SendPropertyChanging();
					this._heureTravail = value;
					this.SendPropertyChanged("heureTravail");
					this.OnheureTravailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaire", DbType="Money NOT NULL")]
		public decimal salaire
		{
			get
			{
				return this._salaire;
			}
			set
			{
				if ((this._salaire != value))
				{
					this.OnsalaireChanging(value);
					this.SendPropertyChanging();
					this._salaire = value;
					this.SendPropertyChanged("salaire");
					this.OnsalaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResp", DbType="Int NOT NULL")]
		public int idResp
		{
			get
			{
				return this._idResp;
			}
			set
			{
				if ((this._idResp != value))
				{
					if (this._Responsable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRespChanging(value);
					this.SendPropertyChanging();
					this._idResp = value;
					this.SendPropertyChanged("idResp");
					this.OnidRespChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", DbType="Int NOT NULL")]
		public int idDepense
		{
			get
			{
				return this._idDepense;
			}
			set
			{
				if ((this._idDepense != value))
				{
					if (this._Depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepenseChanging(value);
					this.SendPropertyChanging();
					this._idDepense = value;
					this.SendPropertyChanged("idDepense");
					this.OnidDepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depense_Participant", Storage="_Depense", ThisKey="idDepense", OtherKey="idDepense", IsForeignKey=true)]
		public Depense Depense
		{
			get
			{
				return this._Depense.Entity;
			}
			set
			{
				Depense previousValue = this._Depense.Entity;
				if (((previousValue != value) 
							|| (this._Depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depense.Entity = null;
						previousValue.Participant.Remove(this);
					}
					this._Depense.Entity = value;
					if ((value != null))
					{
						value.Participant.Add(this);
						this._idDepense = value.idDepense;
					}
					else
					{
						this._idDepense = default(int);
					}
					this.SendPropertyChanged("Depense");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Participant", Storage="_Personnel", ThisKey="idPers", OtherKey="idPers", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Participant = null;
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Participant = this;
						this._idPers = value.idPers;
					}
					else
					{
						this._idPers = default(int);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Participant", Storage="_Responsable", ThisKey="idResp", OtherKey="idPers", IsForeignKey=true)]
		public Responsable Responsable
		{
			get
			{
				return this._Responsable.Entity;
			}
			set
			{
				Responsable previousValue = this._Responsable.Entity;
				if (((previousValue != value) 
							|| (this._Responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Responsable.Entity = null;
						previousValue.Participant.Remove(this);
					}
					this._Responsable.Entity = value;
					if ((value != null))
					{
						value.Participant.Add(this);
						this._idResp = value.idPers;
					}
					else
					{
						this._idResp = default(int);
					}
					this.SendPropertyChanged("Responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personnel")]
	public partial class Personnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPers;
		
		private string _nomPers;
		
		private string _prenomPers;
		
		private System.DateTime _dateNaiss;
		
		private string _email;
		
		private string _telephone;
		
		private string _specialisation;
		
		private string _pass;
		
		private EntityRef<Administrateur> _Administrateur;
		
		private EntityRef<Comptable> _Comptable;
		
		private EntityRef<Participant> _Participant;
		
		private EntityRef<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    partial void OnnomPersChanging(string value);
    partial void OnnomPersChanged();
    partial void OnprenomPersChanging(string value);
    partial void OnprenomPersChanged();
    partial void OndateNaissChanging(System.DateTime value);
    partial void OndateNaissChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnspecialisationChanging(string value);
    partial void OnspecialisationChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    #endregion
		
		public Personnel()
		{
			this._Administrateur = default(EntityRef<Administrateur>);
			this._Comptable = default(EntityRef<Comptable>);
			this._Participant = default(EntityRef<Participant>);
			this._Responsable = default(EntityRef<Responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPers", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nomPers
		{
			get
			{
				return this._nomPers;
			}
			set
			{
				if ((this._nomPers != value))
				{
					this.OnnomPersChanging(value);
					this.SendPropertyChanging();
					this._nomPers = value;
					this.SendPropertyChanged("nomPers");
					this.OnnomPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenomPers", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string prenomPers
		{
			get
			{
				return this._prenomPers;
			}
			set
			{
				if ((this._prenomPers != value))
				{
					this.OnprenomPersChanging(value);
					this.SendPropertyChanging();
					this._prenomPers = value;
					this.SendPropertyChanged("prenomPers");
					this.OnprenomPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaiss", DbType="DateTime NOT NULL")]
		public System.DateTime dateNaiss
		{
			get
			{
				return this._dateNaiss;
			}
			set
			{
				if ((this._dateNaiss != value))
				{
					this.OndateNaissChanging(value);
					this.SendPropertyChanging();
					this._dateNaiss = value;
					this.SendPropertyChanged("dateNaiss");
					this.OndateNaissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialisation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string specialisation
		{
			get
			{
				return this._specialisation;
			}
			set
			{
				if ((this._specialisation != value))
				{
					this.OnspecialisationChanging(value);
					this.SendPropertyChanging();
					this._specialisation = value;
					this.SendPropertyChanged("specialisation");
					this.OnspecialisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Administrateur", Storage="_Administrateur", ThisKey="idPers", OtherKey="idPers", IsUnique=true, IsForeignKey=false)]
		public Administrateur Administrateur
		{
			get
			{
				return this._Administrateur.Entity;
			}
			set
			{
				Administrateur previousValue = this._Administrateur.Entity;
				if (((previousValue != value) 
							|| (this._Administrateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrateur.Entity = null;
						previousValue.Personnel = null;
					}
					this._Administrateur.Entity = value;
					if ((value != null))
					{
						value.Personnel = this;
					}
					this.SendPropertyChanged("Administrateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Comptable", Storage="_Comptable", ThisKey="idPers", OtherKey="idPers", IsUnique=true, IsForeignKey=false)]
		public Comptable Comptable
		{
			get
			{
				return this._Comptable.Entity;
			}
			set
			{
				Comptable previousValue = this._Comptable.Entity;
				if (((previousValue != value) 
							|| (this._Comptable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comptable.Entity = null;
						previousValue.Personnel = null;
					}
					this._Comptable.Entity = value;
					if ((value != null))
					{
						value.Personnel = this;
					}
					this.SendPropertyChanged("Comptable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Participant", Storage="_Participant", ThisKey="idPers", OtherKey="idPers", IsUnique=true, IsForeignKey=false)]
		public Participant Participant
		{
			get
			{
				return this._Participant.Entity;
			}
			set
			{
				Participant previousValue = this._Participant.Entity;
				if (((previousValue != value) 
							|| (this._Participant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participant.Entity = null;
						previousValue.Personnel = null;
					}
					this._Participant.Entity = value;
					if ((value != null))
					{
						value.Personnel = this;
					}
					this.SendPropertyChanged("Participant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Responsable", Storage="_Responsable", ThisKey="idPers", OtherKey="idPers", IsUnique=true, IsForeignKey=false)]
		public Responsable Responsable
		{
			get
			{
				return this._Responsable.Entity;
			}
			set
			{
				Responsable previousValue = this._Responsable.Entity;
				if (((previousValue != value) 
							|| (this._Responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Responsable.Entity = null;
						previousValue.Personnel = null;
					}
					this._Responsable.Entity = value;
					if ((value != null))
					{
						value.Personnel = this;
					}
					this.SendPropertyChanged("Responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Poste")]
	public partial class Poste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPoste;
		
		private string _nomPoste;
		
		private string _description;
		
		private EntitySet<Depense> _Depense;
		
		private EntitySet<Recette> _Recette;
		
		private EntitySet<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPosteChanging(int value);
    partial void OnidPosteChanged();
    partial void OnnomPosteChanging(string value);
    partial void OnnomPosteChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Poste()
		{
			this._Depense = new EntitySet<Depense>(new Action<Depense>(this.attach_Depense), new Action<Depense>(this.detach_Depense));
			this._Recette = new EntitySet<Recette>(new Action<Recette>(this.attach_Recette), new Action<Recette>(this.detach_Recette));
			this._Responsable = new EntitySet<Responsable>(new Action<Responsable>(this.attach_Responsable), new Action<Responsable>(this.detach_Responsable));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					this.OnidPosteChanging(value);
					this.SendPropertyChanging();
					this._idPoste = value;
					this.SendPropertyChanged("idPoste");
					this.OnidPosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPoste", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomPoste
		{
			get
			{
				return this._nomPoste;
			}
			set
			{
				if ((this._nomPoste != value))
				{
					this.OnnomPosteChanging(value);
					this.SendPropertyChanging();
					this._nomPoste = value;
					this.SendPropertyChanged("nomPoste");
					this.OnnomPosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Depense", Storage="_Depense", ThisKey="idPoste", OtherKey="idPoste")]
		public EntitySet<Depense> Depense
		{
			get
			{
				return this._Depense;
			}
			set
			{
				this._Depense.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Recette", Storage="_Recette", ThisKey="idPoste", OtherKey="idPoste")]
		public EntitySet<Recette> Recette
		{
			get
			{
				return this._Recette;
			}
			set
			{
				this._Recette.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Responsable", Storage="_Responsable", ThisKey="idPoste", OtherKey="idPoste")]
		public EntitySet<Responsable> Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				this._Responsable.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Depense(Depense entity)
		{
			this.SendPropertyChanging();
			entity.Poste = this;
		}
		
		private void detach_Depense(Depense entity)
		{
			this.SendPropertyChanging();
			entity.Poste = null;
		}
		
		private void attach_Recette(Recette entity)
		{
			this.SendPropertyChanging();
			entity.Poste = this;
		}
		
		private void detach_Recette(Recette entity)
		{
			this.SendPropertyChanging();
			entity.Poste = null;
		}
		
		private void attach_Responsable(Responsable entity)
		{
			this.SendPropertyChanging();
			entity.Poste = this;
		}
		
		private void detach_Responsable(Responsable entity)
		{
			this.SendPropertyChanging();
			entity.Poste = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recette")]
	public partial class Recette : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRecette;
		
		private decimal _totalRec;
		
		private int _idPoste;
		
		private EntitySet<Revenu> _Revenu;
		
		private EntityRef<Poste> _Poste;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRecetteChanging(int value);
    partial void OnidRecetteChanged();
    partial void OntotalRecChanging(decimal value);
    partial void OntotalRecChanged();
    partial void OnidPosteChanging(int value);
    partial void OnidPosteChanged();
    #endregion
		
		public Recette()
		{
			this._Revenu = new EntitySet<Revenu>(new Action<Revenu>(this.attach_Revenu), new Action<Revenu>(this.detach_Revenu));
			this._Poste = default(EntityRef<Poste>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecette", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRecette
		{
			get
			{
				return this._idRecette;
			}
			set
			{
				if ((this._idRecette != value))
				{
					this.OnidRecetteChanging(value);
					this.SendPropertyChanging();
					this._idRecette = value;
					this.SendPropertyChanged("idRecette");
					this.OnidRecetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalRec", DbType="Money NOT NULL")]
		public decimal totalRec
		{
			get
			{
				return this._totalRec;
			}
			set
			{
				if ((this._totalRec != value))
				{
					this.OntotalRecChanging(value);
					this.SendPropertyChanging();
					this._totalRec = value;
					this.SendPropertyChanged("totalRec");
					this.OntotalRecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					if (this._Poste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPosteChanging(value);
					this.SendPropertyChanging();
					this._idPoste = value;
					this.SendPropertyChanged("idPoste");
					this.OnidPosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recette_Revenu", Storage="_Revenu", ThisKey="idRecette", OtherKey="idRecette")]
		public EntitySet<Revenu> Revenu
		{
			get
			{
				return this._Revenu;
			}
			set
			{
				this._Revenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Recette", Storage="_Poste", ThisKey="idPoste", OtherKey="idPoste", IsForeignKey=true)]
		public Poste Poste
		{
			get
			{
				return this._Poste.Entity;
			}
			set
			{
				Poste previousValue = this._Poste.Entity;
				if (((previousValue != value) 
							|| (this._Poste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poste.Entity = null;
						previousValue.Recette.Remove(this);
					}
					this._Poste.Entity = value;
					if ((value != null))
					{
						value.Recette.Add(this);
						this._idPoste = value.idPoste;
					}
					else
					{
						this._idPoste = default(int);
					}
					this.SendPropertyChanged("Poste");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Revenu(Revenu entity)
		{
			this.SendPropertyChanging();
			entity.Recette = this;
		}
		
		private void detach_Revenu(Revenu entity)
		{
			this.SendPropertyChanging();
			entity.Recette = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Responsable")]
	public partial class Responsable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPers;
		
		private string _fonction;
		
		private decimal _salaireResp;
		
		private int _idPoste;
		
		private int _idAdmin;
		
		private EntitySet<Materiel> _Materiel;
		
		private EntitySet<Participant> _Participant;
		
		private EntitySet<Revenu> _Revenu;
		
		private EntityRef<Personnel> _Personnel;
		
		private EntityRef<Poste> _Poste;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersChanging(int value);
    partial void OnidPersChanged();
    partial void OnfonctionChanging(string value);
    partial void OnfonctionChanged();
    partial void OnsalaireRespChanging(decimal value);
    partial void OnsalaireRespChanged();
    partial void OnidPosteChanging(int value);
    partial void OnidPosteChanged();
    partial void OnidAdminChanging(int value);
    partial void OnidAdminChanged();
    #endregion
		
		public Responsable()
		{
			this._Materiel = new EntitySet<Materiel>(new Action<Materiel>(this.attach_Materiel), new Action<Materiel>(this.detach_Materiel));
			this._Participant = new EntitySet<Participant>(new Action<Participant>(this.attach_Participant), new Action<Participant>(this.detach_Participant));
			this._Revenu = new EntitySet<Revenu>(new Action<Revenu>(this.attach_Revenu), new Action<Revenu>(this.detach_Revenu));
			this._Personnel = default(EntityRef<Personnel>);
			this._Poste = default(EntityRef<Poste>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersChanging(value);
					this.SendPropertyChanging();
					this._idPers = value;
					this.SendPropertyChanged("idPers");
					this.OnidPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fonction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fonction
		{
			get
			{
				return this._fonction;
			}
			set
			{
				if ((this._fonction != value))
				{
					this.OnfonctionChanging(value);
					this.SendPropertyChanging();
					this._fonction = value;
					this.SendPropertyChanged("fonction");
					this.OnfonctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaireResp", DbType="Money NOT NULL")]
		public decimal salaireResp
		{
			get
			{
				return this._salaireResp;
			}
			set
			{
				if ((this._salaireResp != value))
				{
					this.OnsalaireRespChanging(value);
					this.SendPropertyChanging();
					this._salaireResp = value;
					this.SendPropertyChanged("salaireResp");
					this.OnsalaireRespChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", DbType="Int NOT NULL")]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					if (this._Poste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPosteChanging(value);
					this.SendPropertyChanging();
					this._idPoste = value;
					this.SendPropertyChanged("idPoste");
					this.OnidPosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", DbType="Int NOT NULL")]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this.OnidAdminChanging(value);
					this.SendPropertyChanging();
					this._idAdmin = value;
					this.SendPropertyChanged("idAdmin");
					this.OnidAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Materiel", Storage="_Materiel", ThisKey="idPers", OtherKey="idPers")]
		public EntitySet<Materiel> Materiel
		{
			get
			{
				return this._Materiel;
			}
			set
			{
				this._Materiel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Participant", Storage="_Participant", ThisKey="idPers", OtherKey="idResp")]
		public EntitySet<Participant> Participant
		{
			get
			{
				return this._Participant;
			}
			set
			{
				this._Participant.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Revenu", Storage="_Revenu", ThisKey="idPers", OtherKey="idPersonnel")]
		public EntitySet<Revenu> Revenu
		{
			get
			{
				return this._Revenu;
			}
			set
			{
				this._Revenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Responsable", Storage="_Personnel", ThisKey="idPers", OtherKey="idPers", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Responsable = null;
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Responsable = this;
						this._idPers = value.idPers;
					}
					else
					{
						this._idPers = default(int);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poste_Responsable", Storage="_Poste", ThisKey="idPoste", OtherKey="idPoste", IsForeignKey=true)]
		public Poste Poste
		{
			get
			{
				return this._Poste.Entity;
			}
			set
			{
				Poste previousValue = this._Poste.Entity;
				if (((previousValue != value) 
							|| (this._Poste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poste.Entity = null;
						previousValue.Responsable.Remove(this);
					}
					this._Poste.Entity = value;
					if ((value != null))
					{
						value.Responsable.Add(this);
						this._idPoste = value.idPoste;
					}
					else
					{
						this._idPoste = default(int);
					}
					this.SendPropertyChanged("Poste");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materiel(Materiel entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = this;
		}
		
		private void detach_Materiel(Materiel entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = null;
		}
		
		private void attach_Participant(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = this;
		}
		
		private void detach_Participant(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = null;
		}
		
		private void attach_Revenu(Revenu entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = this;
		}
		
		private void detach_Revenu(Revenu entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revenu")]
	public partial class Revenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRevenu;
		
		private string _description;
		
		private decimal _montant;
		
		private int _idRecette;
		
		private int _idPersonnel;
		
		private EntityRef<Recette> _Recette;
		
		private EntityRef<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRevenuChanging(int value);
    partial void OnidRevenuChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnmontantChanging(decimal value);
    partial void OnmontantChanged();
    partial void OnidRecetteChanging(int value);
    partial void OnidRecetteChanged();
    partial void OnidPersonnelChanging(int value);
    partial void OnidPersonnelChanged();
    #endregion
		
		public Revenu()
		{
			this._Recette = default(EntityRef<Recette>);
			this._Responsable = default(EntityRef<Responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRevenu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRevenu
		{
			get
			{
				return this._idRevenu;
			}
			set
			{
				if ((this._idRevenu != value))
				{
					this.OnidRevenuChanging(value);
					this.SendPropertyChanging();
					this._idRevenu = value;
					this.SendPropertyChanged("idRevenu");
					this.OnidRevenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Money NOT NULL")]
		public decimal montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecette", DbType="Int NOT NULL")]
		public int idRecette
		{
			get
			{
				return this._idRecette;
			}
			set
			{
				if ((this._idRecette != value))
				{
					if (this._Recette.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRecetteChanging(value);
					this.SendPropertyChanging();
					this._idRecette = value;
					this.SendPropertyChanged("idRecette");
					this.OnidRecetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersonnel", DbType="Int NOT NULL")]
		public int idPersonnel
		{
			get
			{
				return this._idPersonnel;
			}
			set
			{
				if ((this._idPersonnel != value))
				{
					if (this._Responsable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonnelChanging(value);
					this.SendPropertyChanging();
					this._idPersonnel = value;
					this.SendPropertyChanged("idPersonnel");
					this.OnidPersonnelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recette_Revenu", Storage="_Recette", ThisKey="idRecette", OtherKey="idRecette", IsForeignKey=true)]
		public Recette Recette
		{
			get
			{
				return this._Recette.Entity;
			}
			set
			{
				Recette previousValue = this._Recette.Entity;
				if (((previousValue != value) 
							|| (this._Recette.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recette.Entity = null;
						previousValue.Revenu.Remove(this);
					}
					this._Recette.Entity = value;
					if ((value != null))
					{
						value.Revenu.Add(this);
						this._idRecette = value.idRecette;
					}
					else
					{
						this._idRecette = default(int);
					}
					this.SendPropertyChanged("Recette");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Revenu", Storage="_Responsable", ThisKey="idPersonnel", OtherKey="idPers", IsForeignKey=true)]
		public Responsable Responsable
		{
			get
			{
				return this._Responsable.Entity;
			}
			set
			{
				Responsable previousValue = this._Responsable.Entity;
				if (((previousValue != value) 
							|| (this._Responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Responsable.Entity = null;
						previousValue.Revenu.Remove(this);
					}
					this._Responsable.Entity = value;
					if ((value != null))
					{
						value.Revenu.Add(this);
						this._idPersonnel = value.idPers;
					}
					else
					{
						this._idPersonnel = default(int);
					}
					this.SendPropertyChanged("Responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class isAdminResult
	{
		
		private int _idPers;
		
		private System.DateTime _dateFest;
		
		private string _nomFest;
		
		public isAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFest", DbType="DateTime NOT NULL")]
		public System.DateTime dateFest
		{
			get
			{
				return this._dateFest;
			}
			set
			{
				if ((this._dateFest != value))
				{
					this._dateFest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomFest", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomFest
		{
			get
			{
				return this._nomFest;
			}
			set
			{
				if ((this._nomFest != value))
				{
					this._nomFest = value;
				}
			}
		}
	}
	
	public partial class isComptResult
	{
		
		private int _idPers;
		
		private decimal _budgetDisp;
		
		private decimal _salaire;
		
		private int _idAdmin;
		
		public isComptResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_budgetDisp", DbType="Money NOT NULL")]
		public decimal budgetDisp
		{
			get
			{
				return this._budgetDisp;
			}
			set
			{
				if ((this._budgetDisp != value))
				{
					this._budgetDisp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaire", DbType="Money NOT NULL")]
		public decimal salaire
		{
			get
			{
				return this._salaire;
			}
			set
			{
				if ((this._salaire != value))
				{
					this._salaire = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", DbType="Int NOT NULL")]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this._idAdmin = value;
				}
			}
		}
	}
	
	public partial class isParticipantResult
	{
		
		private int _idPers;
		
		private int _heureTravail;
		
		private decimal _salaire;
		
		private int _idResp;
		
		private int _idDepense;
		
		public isParticipantResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heureTravail", DbType="Int NOT NULL")]
		public int heureTravail
		{
			get
			{
				return this._heureTravail;
			}
			set
			{
				if ((this._heureTravail != value))
				{
					this._heureTravail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaire", DbType="Money NOT NULL")]
		public decimal salaire
		{
			get
			{
				return this._salaire;
			}
			set
			{
				if ((this._salaire != value))
				{
					this._salaire = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResp", DbType="Int NOT NULL")]
		public int idResp
		{
			get
			{
				return this._idResp;
			}
			set
			{
				if ((this._idResp != value))
				{
					this._idResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", DbType="Int NOT NULL")]
		public int idDepense
		{
			get
			{
				return this._idDepense;
			}
			set
			{
				if ((this._idDepense != value))
				{
					this._idDepense = value;
				}
			}
		}
	}
	
	public partial class isResponsableResult
	{
		
		private int _idPers;
		
		private string _fonction;
		
		private decimal _salaireResp;
		
		private int _idPoste;
		
		private int _idAdmin;
		
		public isResponsableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fonction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fonction
		{
			get
			{
				return this._fonction;
			}
			set
			{
				if ((this._fonction != value))
				{
					this._fonction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaireResp", DbType="Money NOT NULL")]
		public decimal salaireResp
		{
			get
			{
				return this._salaireResp;
			}
			set
			{
				if ((this._salaireResp != value))
				{
					this._salaireResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", DbType="Int NOT NULL")]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					this._idPoste = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", DbType="Int NOT NULL")]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this._idAdmin = value;
				}
			}
		}
	}
	
	public partial class VérificatioCompteExistantResult
	{
		
		private System.Nullable<int> _Column1;
		
		public VérificatioCompteExistantResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class VérificationLoginResult
	{
		
		private int _idPers;
		
		private string _nomPers;
		
		private string _prenomPers;
		
		private System.DateTime _dateNaiss;
		
		private string _email;
		
		private string _telephone;
		
		private string _specialisation;
		
		private string _pass;
		
		public VérificationLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPers", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nomPers
		{
			get
			{
				return this._nomPers;
			}
			set
			{
				if ((this._nomPers != value))
				{
					this._nomPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenomPers", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string prenomPers
		{
			get
			{
				return this._prenomPers;
			}
			set
			{
				if ((this._prenomPers != value))
				{
					this._prenomPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaiss", DbType="DateTime NOT NULL")]
		public System.DateTime dateNaiss
		{
			get
			{
				return this._dateNaiss;
			}
			set
			{
				if ((this._dateNaiss != value))
				{
					this._dateNaiss = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this._telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialisation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string specialisation
		{
			get
			{
				return this._specialisation;
			}
			set
			{
				if ((this._specialisation != value))
				{
					this._specialisation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
	}
	
	public partial class AfficherPosteResult
	{
		
		private string _nomPoste;
		
		private string _description;
		
		public AfficherPosteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPoste", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomPoste
		{
			get
			{
				return this._nomPoste;
			}
			set
			{
				if ((this._nomPoste != value))
				{
					this._nomPoste = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	public partial class GetRespAndPosteResult
	{
		
		private int _idPers;
		
		private string _fonction;
		
		private decimal _salaireResp;
		
		private int _idPoste;
		
		private int _idAdmin;
		
		private int _idPoste1;
		
		private string _nomPoste;
		
		private string _description;
		
		public GetRespAndPosteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fonction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fonction
		{
			get
			{
				return this._fonction;
			}
			set
			{
				if ((this._fonction != value))
				{
					this._fonction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaireResp", DbType="Money NOT NULL")]
		public decimal salaireResp
		{
			get
			{
				return this._salaireResp;
			}
			set
			{
				if ((this._salaireResp != value))
				{
					this._salaireResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste", DbType="Int NOT NULL")]
		public int idPoste
		{
			get
			{
				return this._idPoste;
			}
			set
			{
				if ((this._idPoste != value))
				{
					this._idPoste = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", DbType="Int NOT NULL")]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this._idAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPoste1", DbType="Int NOT NULL")]
		public int idPoste1
		{
			get
			{
				return this._idPoste1;
			}
			set
			{
				if ((this._idPoste1 != value))
				{
					this._idPoste1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPoste", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomPoste
		{
			get
			{
				return this._nomPoste;
			}
			set
			{
				if ((this._nomPoste != value))
				{
					this._nomPoste = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	public partial class GetAllMaterielResult
	{
		
		private int _idMateriel;
		
		private string _nom;
		
		private decimal _prix;
		
		private int _quantité;
		
		private int _idDepense;
		
		private int _idPers;
		
		public GetAllMaterielResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateriel", DbType="Int NOT NULL")]
		public int idMateriel
		{
			get
			{
				return this._idMateriel;
			}
			set
			{
				if ((this._idMateriel != value))
				{
					this._idMateriel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this._nom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Money NOT NULL")]
		public decimal prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this._prix = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantité", DbType="Int NOT NULL")]
		public int quantité
		{
			get
			{
				return this._quantité;
			}
			set
			{
				if ((this._quantité != value))
				{
					this._quantité = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", DbType="Int NOT NULL")]
		public int idDepense
		{
			get
			{
				return this._idDepense;
			}
			set
			{
				if ((this._idDepense != value))
				{
					this._idDepense = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPers", DbType="Int NOT NULL")]
		public int idPers
		{
			get
			{
				return this._idPers;
			}
			set
			{
				if ((this._idPers != value))
				{
					this._idPers = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
